import React, { useState, useEffect, useCallback } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { AdminService } from '../../services/adminService';\nimport { PapelUsuario, UsuarioEmpresa } from '../../types/multitenant';\nimport { PrivilegeUtils } from '../../utils/privilegeUtils';\nimport {\n  Users,\n  Plus,\n  Search,\n  Filter,\n  Edit,\n  Trash2,\n  Shield,\n  Crown,\n  Eye,\n  EyeOff,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  MoreVertical\n} from 'lucide-react';\n\ninterface FiltrosUsuarios {\n  busca: string;\n  papel: PapelUsuario | 'todos';\n  status: 'todos' | 'ativo' | 'inativo';\n  temAcessoSistema: 'todos' | 'sim' | 'nao';\n}\n\ninterface UsuarioComDetalhes extends UsuarioEmpresa {\n  profile?: {\n    nome: string;\n    email: string;\n  };\n  ultimo_login?: string;\n  total_logins?: number;\n}\n\nexport function GestaoUsuariosHierarquica() {\n  const { papel, verificarPrivilegio, podeGerenciarUsuario } = useAuth();\n  const [usuarios, setUsuarios] = useState<UsuarioComDetalhes[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [filtros, setFiltros] = useState<FiltrosUsuarios>({\n    busca: '',\n    papel: 'todos',\n    status: 'todos',\n    temAcessoSistema: 'todos'\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [showBulkActions, setShowBulkActions] = useState(false);\n\n  // Verificar se tem acesso à gestão de usuários\n  const temAcessoGestao = verificarPrivilegio('gerenciar_usuarios');\n\n  // Carregar usuários\n  const carregarUsuarios = useCallback(async () => {\n    if (!temAcessoGestao) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const usuariosData = await AdminService.listarUsuarios();\n      setUsuarios(usuariosData);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erro ao carregar usuários';\n      setError(errorMessage);\n      console.error('Erro ao carregar usuários:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [temAcessoGestao]);\n\n  useEffect(() => {\n    carregarUsuarios();\n  }, [carregarUsuarios]);\n\n  // Filtrar usuários\n  const usuariosFiltrados = usuarios.filter(usuario => {\n    // Filtro de busca\n    if (filtros.busca) {\n      const busca = filtros.busca.toLowerCase();\n      const nome = usuario.profile?.nome?.toLowerCase() || '';\n      const email = usuario.profile?.email?.toLowerCase() || '';\n      \n      if (!nome.includes(busca) && !email.includes(busca)) {\n        return false;\n      }\n    }\n\n    // Filtro de papel\n    if (filtros.papel !== 'todos' && usuario.papel !== filtros.papel) {\n      return false;\n    }\n\n    // Filtro de status\n    if (filtros.status !== 'todos') {\n      if (filtros.status === 'ativo' && !usuario.ativo) return false;\n      if (filtros.status === 'inativo' && usuario.ativo) return false;\n    }\n\n    // Filtro de acesso ao sistema\n    if (filtros.temAcessoSistema !== 'todos') {\n      if (filtros.temAcessoSistema === 'sim' && !usuario.tem_acesso_sistema) return false;\n      if (filtros.temAcessoSistema === 'nao' && usuario.tem_acesso_sistema) return false;\n    }\n\n    return true;\n  });\n\n  // Estatísticas\n  const estatisticas = {\n    total: usuarios.length,\n    ativos: usuarios.filter(u => u.ativo).length,\n    inativos: usuarios.filter(u => !u.ativo).length,\n    porPapel: {\n      [PapelUsuario.SUPER_ADMIN]: usuarios.filter(u => u.papel === PapelUsuario.SUPER_ADMIN).length,\n      [PapelUsuario.ADMIN]: usuarios.filter(u => u.papel === PapelUsuario.ADMIN).length,\n      [PapelUsuario.MANAGER]: usuarios.filter(u => u.papel === PapelUsuario.MANAGER).length,\n      [PapelUsuario.USER]: usuarios.filter(u => u.papel === PapelUsuario.USER).length\n    }\n  };\n\n  // Ações em lote\n  const handleBulkAction = async (acao: 'ativar' | 'desativar' | 'excluir') => {\n    if (selectedUsers.length === 0) return;\n\n    try {\n      // Implementar ações em lote\n      console.log(`Executando ação ${acao} para usuários:`, selectedUsers);\n      \n      // Recarregar lista após ação\n      await carregarUsuarios();\n      setSelectedUsers([]);\n      setShowBulkActions(false);\n    } catch (err) {\n      console.error(`Erro ao executar ação ${acao}:`, err);\n    }\n  };\n\n  // Alternar status do usuário\n  const toggleUserStatus = async (userId: string, novoStatus: boolean) => {\n    try {\n      await AdminService.alterarStatusUsuario(userId, novoStatus);\n      await carregarUsuarios();\n    } catch (err) {\n      console.error('Erro ao alterar status do usuário:', err);\n    }\n  };\n\n  // Renderizar badge do papel\n  const renderPapelBadge = (papelUsuario: PapelUsuario, isPrimeiro?: boolean) => {\n    const cor = PrivilegeUtils.getCorPapel(papelUsuario);\n    const descricao = PrivilegeUtils.getDescricaoPapel(papelUsuario);\n    \n    return (\n      <div className=\"flex items-center space-x-1\">\n        <span className={`\n          inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\n          ${cor === 'red' ? 'bg-red-100 text-red-800' : ''}\n          ${cor === 'orange' ? 'bg-orange-100 text-orange-800' : ''}\n          ${cor === 'blue' ? 'bg-blue-100 text-blue-800' : ''}\n          ${cor === 'gray' ? 'bg-gray-100 text-gray-800' : ''}\n        `}>\n          {papelUsuario === PapelUsuario.SUPER_ADMIN && <Shield className=\"w-3 h-3 mr-1\" />}\n          {descricao}\n        </span>\n        {isPrimeiro && (\n          <Crown className=\"w-4 h-4 text-yellow-500\" title=\"Primeiro Usuário\" />\n        )}\n      </div>\n    );\n  };\n\n  if (!temAcessoGestao) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center p-8\">\n            <div className=\"text-red-500 mb-4\">\n              <Users className=\"w-16 h-16 mx-auto\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              Acesso Negado\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              Você não tem privilégios para gerenciar usuários.\n            </p>\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 max-w-md mx-auto\">\n              <p className=\"text-sm text-red-800\">\n                <strong>Privilégio necessário:</strong> gerenciar_usuarios\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\n                <Users className=\"w-8 h-8 mr-3 text-blue-600\" />\n                Gestão de Usuários\n              </h1>\n              <p className=\"mt-2 text-gray-600\">\n                Gerencie usuários, papéis e privilégios da empresa\n              </p>\n            </div>\n            \n            <button\n              onClick={() => console.log('Adicionar usuário')}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Adicionar Usuário\n            </button>\n          </div>\n\n          {/* Estatísticas */}\n          <div className=\"mt-6 grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center\">\n                <Users className=\"w-8 h-8 text-blue-500\" />\n                <div className=\"ml-3\">\n                  <p className=\"text-sm font-medium text-gray-600\">Total</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{estatisticas.total}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-8 h-8 text-green-500\" />\n                <div className=\"ml-3\">\n                  <p className=\"text-sm font-medium text-gray-600\">Ativos</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{estatisticas.ativos}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center\">\n                <Shield className=\"w-8 h-8 text-red-500\" />\n                <div className=\"ml-3\">\n                  <p className=\"text-sm font-medium text-gray-600\">Admins</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">\n                    {estatisticas.porPapel[PapelUsuario.SUPER_ADMIN] + estatisticas.porPapel[PapelUsuario.ADMIN]}\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center\">\n                <XCircle className=\"w-8 h-8 text-gray-500\" />\n                <div className=\"ml-3\">\n                  <p className=\"text-sm font-medium text-gray-600\">Inativos</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{estatisticas.inativos}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Filtros e Busca */}\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Filtros</h3>\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              <Filter className=\"w-4 h-4 mr-2\" />\n              {showFilters ? 'Ocultar' : 'Mostrar'} Filtros\n            </button>\n          </div>\n\n          {/* Busca */}\n          <div className=\"relative mb-4\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome ou email...\"\n              value={filtros.busca}\n              onChange={(e) => setFiltros(prev => ({ ...prev, busca: e.target.value }))}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          {/* Filtros Avançados */}\n          {showFilters && (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {/* Filtro por Papel */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Papel\n                </label>\n                <select\n                  value={filtros.papel}\n                  onChange={(e) => setFiltros(prev => ({ ...prev, papel: e.target.value as any }))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"todos\">Todos os Papéis</option>\n                  <option value={PapelUsuario.SUPER_ADMIN}>Super Administrador</option>\n                  <option value={PapelUsuario.ADMIN}>Administrador</option>\n                  <option value={PapelUsuario.MANAGER}>Gerente</option>\n                  <option value={PapelUsuario.USER}>Usuário</option>\n                </select>\n              </div>\n\n              {/* Filtro por Status */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Status\n                </label>\n                <select\n                  value={filtros.status}\n                  onChange={(e) => setFiltros(prev => ({ ...prev, status: e.target.value as any }))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"todos\">Todos</option>\n                  <option value=\"ativo\">Ativo</option>\n                  <option value=\"inativo\">Inativo</option>\n                </select>\n              </div>\n\n              {/* Filtro por Acesso ao Sistema */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Acesso ao Sistema\n                </label>\n                <select\n                  value={filtros.temAcessoSistema}\n                  onChange={(e) => setFiltros(prev => ({ ...prev, temAcessoSistema: e.target.value as any }))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"todos\">Todos</option>\n                  <option value=\"sim\">Com Acesso</option>\n                  <option value=\"nao\">Sem Acesso</option>\n                </select>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Ações em Lote */}\n        {selectedUsers.length > 0 && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <CheckCircle className=\"w-5 h-5 text-blue-600 mr-2\" />\n                <span className=\"text-sm font-medium text-blue-900\">\n                  {selectedUsers.length} usuário(s) selecionado(s)\n                </span>\n              </div>\n              \n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => handleBulkAction('ativar')}\n                  className=\"px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700\"\n                >\n                  Ativar\n                </button>\n                <button\n                  onClick={() => handleBulkAction('desativar')}\n                  className=\"px-3 py-1 bg-yellow-600 text-white text-sm rounded-md hover:bg-yellow-700\"\n                >\n                  Desativar\n                </button>\n                <button\n                  onClick={() => handleBulkAction('excluir')}\n                  className=\"px-3 py-1 bg-red-600 text-white text-sm rounded-md hover:bg-red-700\"\n                >\n                  Excluir\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Lista de Usuários */}\n        <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center p-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            </div>\n          ) : error ? (\n            <div className=\"text-center p-8\">\n              <AlertTriangle className=\"w-12 h-12 mx-auto text-red-500 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Erro ao Carregar</h3>\n              <p className=\"text-gray-600 mb-4\">{error}</p>\n              <button\n                onClick={carregarUsuarios}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                Tentar Novamente\n              </button>\n            </div>\n          ) : usuariosFiltrados.length === 0 ? (\n            <div className=\"text-center p-8\">\n              <Users className=\"w-12 h-12 mx-auto text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum Usuário Encontrado</h3>\n              <p className=\"text-gray-600\">Tente ajustar os filtros ou adicionar novos usuários.</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      <input\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            setSelectedUsers(usuariosFiltrados.map(u => u.user_id));\n                          } else {\n                            setSelectedUsers([]);\n                          }\n                        }}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Usuário\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Papel\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Último Login\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Ações\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {usuariosFiltrados.map((usuario) => (\n                    <tr key={usuario.user_id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedUsers.includes(usuario.user_id)}\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              setSelectedUsers(prev => [...prev, usuario.user_id]);\n                            } else {\n                              setSelectedUsers(prev => prev.filter(id => id !== usuario.user_id));\n                            }\n                          }}\n                          className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                        />\n                      </td>\n                      \n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <div className=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n                              <Users className=\"w-5 h-5 text-gray-600\" />\n                            </div>\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">\n                              {usuario.profile?.nome || 'Nome não informado'}\n                            </div>\n                            <div className=\"text-sm text-gray-500\">\n                              {usuario.profile?.email || 'Email não informado'}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      \n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {renderPapelBadge(usuario.papel, usuario.is_primeiro_usuario)}\n                      </td>\n                      \n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center space-x-2\">\n                          <span className={`\n                            inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\n                            ${usuario.ativo \n                              ? 'bg-green-100 text-green-800' \n                              : 'bg-red-100 text-red-800'\n                            }\n                          `}>\n                            {usuario.ativo ? (\n                              <>\n                                <CheckCircle className=\"w-3 h-3 mr-1\" />\n                                Ativo\n                              </>\n                            ) : (\n                              <>\n                                <XCircle className=\"w-3 h-3 mr-1\" />\n                                Inativo\n                              </>\n                            )}\n                          </span>\n                          \n                          {usuario.tem_acesso_sistema && (\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                              <Eye className=\"w-3 h-3 mr-1\" />\n                              Sistema\n                            </span>\n                          )}\n                        </div>\n                      </td>\n                      \n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {usuario.ultimo_login ? (\n                          new Date(usuario.ultimo_login).toLocaleDateString('pt-BR')\n                        ) : (\n                          'Nunca'\n                        )}\n                      </td>\n                      \n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                        <div className=\"flex items-center space-x-2\">\n                          {podeGerenciarUsuario(usuario.papel) && (\n                            <>\n                              <button\n                                onClick={() => console.log('Editar usuário', usuario.user_id)}\n                                className=\"text-blue-600 hover:text-blue-900\"\n                                title=\"Editar usuário\"\n                              >\n                                <Edit className=\"w-4 h-4\" />\n                              </button>\n                              \n                              <button\n                                onClick={() => toggleUserStatus(usuario.user_id, !usuario.ativo)}\n                                className={`\n                                  ${usuario.ativo \n                                    ? 'text-red-600 hover:text-red-900' \n                                    : 'text-green-600 hover:text-green-900'\n                                  }\n                                `}\n                                title={usuario.ativo ? 'Desativar usuário' : 'Ativar usuário'}\n                              >\n                                {usuario.ativo ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n                              </button>\n                              \n                              {!usuario.is_primeiro_usuario && (\n                                <button\n                                  onClick={() => console.log('Excluir usuário', usuario.user_id)}\n                                  className=\"text-red-600 hover:text-red-900\"\n                                  title=\"Excluir usuário\"\n                                >\n                                  <Trash2 className=\"w-4 h-4\" />\n                                </button>\n                              )}\n                            </>\n                          )}\n                          \n                          <button\n                            onClick={() => console.log('Mais opções', usuario.user_id)}\n                            className=\"text-gray-400 hover:text-gray-600\"\n                            title=\"Mais opções\"\n                          >\n                            <MoreVertical className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* Paginação */}\n        {usuariosFiltrados.length > 0 && (\n          <div className=\"mt-6 flex items-center justify-between\">\n            <div className=\"text-sm text-gray-700\">\n              Mostrando {usuariosFiltrados.length} de {usuarios.length} usuários\n            </div>\n            \n            <div className=\"flex space-x-2\">\n              <button className=\"px-3 py-2 border border-gray-300 text-sm rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\">\n                Anterior\n              </button>\n              <button className=\"px-3 py-2 border border-gray-300 text-sm rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\">\n                Próximo\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}