import React, { useState } from 'react';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useConfiguracaoHierarquica } from '../../hooks/useConfiguracaoHierarquica';\nimport {\n  CategoriaConfiguracaoHierarquica,\n  CONTROLE_ACESSO_CONFIGURACOES\n} from '../../types/configuracoes';\nimport { PapelUsuario } from '../../types/multitenant';\nimport { ConfiguracaoGeral } from '../../components/Configuracoes/ConfiguracaoGeral';\nimport { ConfiguracaoSeguranca } from '../../components/Configuracoes/ConfiguracaoSeguranca';\nimport { ConfiguracaoSistema } from '../../components/Configuracoes/ConfiguracaoSistema';\nimport { Crown, Shield, AlertTriangle, Info } from 'lucide-react';\n\nexport function ConfiguracoesHierarquicas() {\n  const { papel, isPrimeiroUsuario } = useAuth();\n  const { getCategoriasAcessiveis, isLoading } = useConfiguracaoHierarquica();\n  const [activeTab, setActiveTab] = useState<CategoriaConfiguracaoHierarquica>(\n    CategoriaConfiguracaoHierarquica.GERAL\n  );\n\n  const categoriasAcessiveis = getCategoriasAcessiveis();\n\n  // Se não tem acesso a nenhuma categoria, mostrar mensagem\n  if (!isLoading && categoriasAcessiveis.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center p-8\">\n            <div className=\"text-red-500 mb-4\">\n              <Shield className=\"w-16 h-16 mx-auto\" />\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              Acesso Negado\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              Você não tem permissão para acessar as configurações do sistema.\n            </p>\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 max-w-md mx-auto\">\n              <p className=\"text-sm text-red-800\">\n                <strong>Papel atual:</strong> {papel}<br />\n                <strong>Requerido:</strong> Administrador ou superior\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Definir primeira aba acessível como ativa se a atual não for acessível\n  React.useEffect(() => {\n    if (categoriasAcessiveis.length > 0 && !categoriasAcessiveis.includes(activeTab)) {\n      setActiveTab(categoriasAcessiveis[0]);\n    }\n  }, [categoriasAcessiveis, activeTab]);\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case CategoriaConfiguracaoHierarquica.GERAL:\n        return <ConfiguracaoGeral />;\n      case CategoriaConfiguracaoHierarquica.SEGURANCA:\n        return <ConfiguracaoSeguranca />;\n      case CategoriaConfiguracaoHierarquica.SISTEMA:\n        return <ConfiguracaoSistema />;\n      case CategoriaConfiguracaoHierarquica.NOTIFICACOES:\n        return (\n          <div className=\"text-center p-8\">\n            <Info className=\"w-12 h-12 mx-auto text-blue-500 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Em Desenvolvimento\n            </h3>\n            <p className=\"text-gray-600\">\n              As configurações de notificações estão sendo desenvolvidas.\n            </p>\n          </div>\n        );\n      case CategoriaConfiguracaoHierarquica.INTEGRACAO:\n        return (\n          <div className=\"text-center p-8\">\n            <Info className=\"w-12 h-12 mx-auto text-blue-500 mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Em Desenvolvimento\n            </h3>\n            <p className=\"text-gray-600\">\n              As configurações de integração estão sendo desenvolvidas.\n            </p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const getTabIcon = (categoria: CategoriaConfiguracaoHierarquica) => {\n    const controle = CONTROLE_ACESSO_CONFIGURACOES[categoria];\n    return controle.icone;\n  };\n\n  const getTabBadge = (categoria: CategoriaConfiguracaoHierarquica) => {\n    const controle = CONTROLE_ACESSO_CONFIGURACOES[categoria];\n    \n    if (controle.nivelMinimo === 'super_admin') {\n      return (\n        <span className=\"inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 ml-2\">\n          SUPER_ADMIN\n        </span>\n      );\n    }\n    \n    if (controle.nivelMinimo === 'admin') {\n      return (\n        <span className=\"inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800 ml-2\">\n          ADMIN+\n        </span>\n      );\n    }\n    \n    return null;\n  };\n\n  const getAlertLevel = (categoria: CategoriaConfiguracaoHierarquica) => {\n    const controle = CONTROLE_ACESSO_CONFIGURACOES[categoria];\n    \n    if (controle.requerConfirmacaoDupla) {\n      return 'critical';\n    }\n    \n    if (controle.requerConfirmacaoSenha) {\n      return 'high';\n    }\n    \n    return 'normal';\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Carregando configurações...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\n                <Shield className=\"w-8 h-8 mr-3 text-blue-600\" />\n                Configurações do Sistema\n              </h1>\n              <p className=\"mt-2 text-gray-600\">\n                Configure as preferências e comportamentos do sistema\n              </p>\n            </div>\n            \n            {/* Indicador de Papel */}\n            <div className=\"flex items-center space-x-3\">\n              {isPrimeiroUsuario && (\n                <div className=\"flex items-center space-x-2 bg-yellow-50 border border-yellow-200 rounded-lg px-3 py-2\">\n                  <Crown className=\"w-5 h-5 text-yellow-600\" />\n                  <span className=\"text-sm font-medium text-yellow-800\">\n                    Administrador Principal\n                  </span>\n                </div>\n              )}\n              \n              <div className={`\n                flex items-center space-x-2 rounded-lg px-3 py-2 border\n                ${papel === PapelUsuario.SUPER_ADMIN ? 'bg-red-50 border-red-200' : ''}\n                ${papel === PapelUsuario.ADMIN ? 'bg-orange-50 border-orange-200' : ''}\n                ${papel === PapelUsuario.MANAGER ? 'bg-blue-50 border-blue-200' : ''}\n              `}>\n                <Shield className={`\n                  w-4 h-4\n                  ${papel === PapelUsuario.SUPER_ADMIN ? 'text-red-600' : ''}\n                  ${papel === PapelUsuario.ADMIN ? 'text-orange-600' : ''}\n                  ${papel === PapelUsuario.MANAGER ? 'text-blue-600' : ''}\n                `} />\n                <span className={`\n                  text-sm font-medium\n                  ${papel === PapelUsuario.SUPER_ADMIN ? 'text-red-800' : ''}\n                  ${papel === PapelUsuario.ADMIN ? 'text-orange-800' : ''}\n                  ${papel === PapelUsuario.MANAGER ? 'text-blue-800' : ''}\n                `}>\n                  {papel === PapelUsuario.SUPER_ADMIN && 'Super Administrador'}\n                  {papel === PapelUsuario.ADMIN && 'Administrador'}\n                  {papel === PapelUsuario.MANAGER && 'Gerente'}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Alerta sobre nível de acesso */}\n          <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-start\">\n              <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-blue-900 mb-1\">\n                  Acesso às Configurações\n                </h4>\n                <p className=\"text-sm text-blue-800\">\n                  Você tem acesso a <strong>{categoriasAcessiveis.length}</strong> de 5 categorias de configuração. \n                  Algumas configurações críticas são restritas a Super Administradores por segurança.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n          {/* Tabs */}\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n              {Object.values(CategoriaConfiguracaoHierarquica).map((categoria) => {\n                const controle = CONTROLE_ACESSO_CONFIGURACOES[categoria];\n                const temAcesso = categoriasAcessiveis.includes(categoria);\n                const alertLevel = getAlertLevel(categoria);\n                \n                if (!temAcesso) {\n                  return (\n                    <div\n                      key={categoria}\n                      className=\"group inline-flex items-center py-4 px-1 border-b-2 border-transparent font-medium text-sm text-gray-300 cursor-not-allowed\"\n                      title=\"Acesso restrito ao seu papel\"\n                    >\n                      <span className=\"text-lg mr-2 opacity-50\">{getTabIcon(categoria)}</span>\n                      <span className=\"line-through\">{controle.descricao.split(' ')[0]}</span>\n                      {getTabBadge(categoria)}\n                    </div>\n                  );\n                }\n                \n                return (\n                  <button\n                    key={categoria}\n                    onClick={() => setActiveTab(categoria)}\n                    className={`\n                      group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm transition-colors\n                      ${activeTab === categoria\n                        ? 'border-blue-500 text-blue-600'\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                      }\n                    `}\n                  >\n                    <span className=\"text-lg mr-2\">{getTabIcon(categoria)}</span>\n                    {controle.descricao.split(' ')[0]}\n                    {getTabBadge(categoria)}\n                    \n                    {/* Indicador de nível de alerta */}\n                    {alertLevel === 'critical' && (\n                      <AlertTriangle className=\"w-3 h-3 text-red-500 ml-1\" />\n                    )}\n                    {alertLevel === 'high' && (\n                      <Shield className=\"w-3 h-3 text-amber-500 ml-1\" />\n                    )}\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n\n          {/* Tab Content */}\n          <div className=\"p-6\">\n            {renderTabContent()}\n          </div>\n        </div>\n\n        {/* Footer com informações */}\n        <div className=\"mt-8 bg-white border border-gray-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n            Informações sobre Níveis de Acesso\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Categorias por Papel</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex items-center\">\n                  <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 mr-2\">\n                    SUPER_ADMIN\n                  </span>\n                  <span className=\"text-gray-600\">Acesso completo (5/5 categorias)</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 mr-2\">\n                    ADMIN\n                  </span>\n                  <span className=\"text-gray-600\">Geral e Notificações (2/5 categorias)</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mr-2\">\n                    MANAGER\n                  </span>\n                  <span className=\"text-gray-600\">Apenas visualização (0/5 categorias)</span>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Níveis de Segurança</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex items-center\">\n                  <AlertTriangle className=\"w-4 h-4 text-red-500 mr-2\" />\n                  <span className=\"text-gray-600\">Crítico: Requer confirmação dupla</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <Shield className=\"w-4 h-4 text-amber-500 mr-2\" />\n                  <span className=\"text-gray-600\">Alto: Requer confirmação de senha</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-4 h-4 bg-green-500 rounded-full mr-2\"></div>\n                  <span className=\"text-gray-600\">Normal: Salvamento direto</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}