import React, { useState } from 'react';\nimport { Save, Shield, Lock, Eye, EyeOff, AlertTriangle, Key } from 'lucide-react';\nimport { useConfiguracaoCategoria } from '../../hooks/useConfiguracaoHierarquica';\nimport { CategoriaConfiguracaoHierarquica } from '../../types/configuracoes';\n\ninterface ConfirmacaoSenhaProps {\n  isOpen: boolean;\n  onConfirm: (senha: string) => void;\n  onCancel: () => void;\n  isLoading: boolean;\n}\n\nfunction ConfirmacaoSenha({ isOpen, onConfirm, onCancel, isLoading }: ConfirmacaoSenhaProps) {\n  const [senha, setSenha] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [confirmacao, setConfirmacao] = useState('');\n\n  if (!isOpen) return null;\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (senha && confirmacao === 'CONFIRMAR') {\n      onConfirm(senha);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n        <div className=\"flex items-center mb-4\">\n          <AlertTriangle className=\"w-6 h-6 text-red-500 mr-3\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Confirmação Necessária\n          </h3>\n        </div>\n        \n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-sm text-red-800\">\n            <strong>⚠️ ATENÇÃO:</strong> Você está alterando configurações críticas de segurança \n            que afetam toda a empresa. Esta ação requer confirmação dupla.\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Senha */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Digite sua senha para confirmar:\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showPassword ? 'text' : 'password'}\n                value={senha}\n                onChange={(e) => setSenha(e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 pr-10 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500\"\n                placeholder=\"Sua senha atual\"\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n              >\n                {showPassword ? (\n                  <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                ) : (\n                  <Eye className=\"w-4 h-4 text-gray-400\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          {/* Confirmação */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Digite \"CONFIRMAR\" para prosseguir:\n            </label>\n            <input\n              type=\"text\"\n              value={confirmacao}\n              onChange={(e) => setConfirmacao(e.target.value.toUpperCase())}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-red-500\"\n              placeholder=\"CONFIRMAR\"\n              required\n            />\n          </div>\n\n          {/* Botões */}\n          <div className=\"flex space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onCancel}\n              className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n              disabled={isLoading}\n            >\n              Cancelar\n            </button>\n            <button\n              type=\"submit\"\n              disabled={!senha || confirmacao !== 'CONFIRMAR' || isLoading}\n              className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Confirmando...\n                </div>\n              ) : (\n                'Confirmar Alterações'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport function ConfiguracaoSeguranca() {\n  const {\n    configuracao,\n    isLoading,\n    isSaving,\n    error,\n    successMessage,\n    temAcesso,\n    controleAcesso,\n    atualizarCampo,\n    salvar,\n    validar\n  } = useConfiguracaoCategoria(CategoriaConfiguracaoHierarquica.SEGURANCA);\n\n  const [alteracoesPendentes, setAlteracoesPendentes] = useState(false);\n  const [showConfirmacao, setShowConfirmacao] = useState(false);\n  const [isValidating, setIsValidating] = useState(false);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!temAcesso) {\n    return (\n      <div className=\"text-center p-8\">\n        <div className=\"text-red-500 mb-4\">\n          <Shield className=\"w-12 h-12 mx-auto\" />\n        </div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n          Acesso Restrito\n        </h3>\n        <p className=\"text-gray-600\">\n          Apenas Super Administradores podem acessar as configurações de segurança.\n        </p>\n        <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-sm text-red-800\">\n            <strong>Motivo:</strong> Estas configurações afetam a segurança de toda a empresa \n            e requerem privilégios máximos.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  const handleFieldChange = async (campo: string, valor: any) => {\n    await atualizarCampo(campo as any, valor);\n    setAlteracoesPendentes(true);\n  };\n\n  const handleSave = () => {\n    setShowConfirmacao(true);\n  };\n\n  const handleConfirmSave = async (senha: string) => {\n    try {\n      setIsValidating(true);\n      \n      const isValid = await validar(senha);\n      if (isValid) {\n        const success = await salvar();\n        if (success) {\n          setAlteracoesPendentes(false);\n          setShowConfirmacao(false);\n        }\n      }\n    } catch (err) {\n      console.error('Erro ao salvar configurações de segurança:', err);\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <Shield className=\"w-5 h-5 mr-2 text-red-500\" />\n            {controleAcesso.descricao}\n          </h3>\n          <div className=\"mt-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n            <p className=\"text-sm text-red-800\">\n              {controleAcesso.alertaImpacto}\n            </p>\n          </div>\n        </div>\n        \n        <button\n          onClick={handleSave}\n          disabled={isSaving || !alteracoesPendentes}\n          className={`\n            inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm\n            ${alteracoesPendentes\n              ? 'text-white bg-red-600 hover:bg-red-700 focus:ring-red-500'\n              : 'text-gray-400 bg-gray-200 cursor-not-allowed'\n            }\n            focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50\n          `}\n        >\n          <Save className=\"w-4 h-4 mr-2\" />\n          Salvar com Confirmação\n        </button>\n      </div>\n\n      {/* Messages */}\n      {error && (\n        <div className=\"rounded-md bg-red-50 p-4\">\n          <div className=\"text-sm text-red-700\">{error}</div>\n        </div>\n      )}\n      \n      {successMessage && (\n        <div className=\"rounded-md bg-green-50 p-4\">\n          <div className=\"text-sm text-green-700\">{successMessage}</div>\n        </div>\n      )}\n\n      {/* Políticas de Senha */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Key className=\"w-4 h-4 mr-2\" />\n          Políticas de Senha\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Caracteres Mínimos */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Caracteres Mínimos\n            </label>\n            <input\n              type=\"number\"\n              min=\"6\"\n              max=\"32\"\n              value={configuracao.senha_minima_caracteres}\n              onChange={(e) => handleFieldChange('senha_minima_caracteres', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          {/* Validade da Senha */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Validade da Senha (dias)\n            </label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"365\"\n              value={configuracao.senha_validade_dias}\n              onChange={(e) => handleFieldChange('senha_validade_dias', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">\n              0 = sem expiração\n            </p>\n          </div>\n\n          {/* Histórico de Senhas */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Histórico de Senhas Bloqueadas\n            </label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              max=\"20\"\n              value={configuracao.senha_historico_bloqueio}\n              onChange={(e) => handleFieldChange('senha_historico_bloqueio', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Quantas senhas anteriores não podem ser reutilizadas\n            </p>\n          </div>\n        </div>\n\n        {/* Requisitos de Senha */}\n        <div className=\"mt-6\">\n          <h5 className=\"text-sm font-medium text-gray-700 mb-3\">Requisitos de Senha</h5>\n          <div className=\"space-y-3\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.senha_exigir_maiuscula}\n                onChange={(e) => handleFieldChange('senha_exigir_maiuscula', e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Exigir letra maiúscula</span>\n            </label>\n            \n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.senha_exigir_minuscula}\n                onChange={(e) => handleFieldChange('senha_exigir_minuscula', e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Exigir letra minúscula</span>\n            </label>\n            \n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.senha_exigir_numero}\n                onChange={(e) => handleFieldChange('senha_exigir_numero', e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Exigir número</span>\n            </label>\n            \n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.senha_exigir_simbolo}\n                onChange={(e) => handleFieldChange('senha_exigir_simbolo', e.target.checked)}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Exigir símbolo especial</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Controle de Sessão */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Lock className=\"w-4 h-4 mr-2\" />\n          Controle de Sessão\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Tempo de Sessão */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tempo de Sessão (minutos)\n            </label>\n            <input\n              type=\"number\"\n              min=\"30\"\n              max=\"1440\"\n              value={configuracao.tempo_sessao_minutos}\n              onChange={(e) => handleFieldChange('tempo_sessao_minutos', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          {/* Sessões Simultâneas */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Sessões Simultâneas Permitidas\n            </label>\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              value={configuracao.sessoes_simultaneas_permitidas}\n              onChange={(e) => handleFieldChange('sessoes_simultaneas_permitidas', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4\">\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={configuracao.logout_automatico_inatividade}\n              onChange={(e) => handleFieldChange('logout_automatico_inatividade', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">\n              Logout automático por inatividade\n            </span>\n          </label>\n        </div>\n      </div>\n\n      {/* Controle de Tentativas */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <AlertTriangle className=\"w-4 h-4 mr-2\" />\n          Controle de Tentativas de Login\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Tentativas Máximas */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tentativas Máximas\n            </label>\n            <input\n              type=\"number\"\n              min=\"3\"\n              max=\"10\"\n              value={configuracao.tentativas_login_max}\n              onChange={(e) => handleFieldChange('tentativas_login_max', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          {/* Bloqueio Temporário */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Bloqueio Temporário (min)\n            </label>\n            <input\n              type=\"number\"\n              min=\"5\"\n              max=\"120\"\n              value={configuracao.bloqueio_temporario_minutos}\n              onChange={(e) => handleFieldChange('bloqueio_temporario_minutos', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n\n          {/* Bloqueio Permanente */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tentativas para Bloqueio Permanente\n            </label>\n            <input\n              type=\"number\"\n              min=\"5\"\n              max=\"50\"\n              value={configuracao.bloqueio_permanente_tentativas}\n              onChange={(e) => handleFieldChange('bloqueio_permanente_tentativas', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Autenticação de Dois Fatores */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Shield className=\"w-4 h-4 mr-2\" />\n          Autenticação de Dois Fatores (2FA)\n        </h4>\n        \n        <div className=\"space-y-4\">\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={configuracao.exigir_2fa}\n              onChange={(e) => handleFieldChange('exigir_2fa', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">\n              Exigir 2FA para todos os usuários\n            </span>\n          </label>\n          \n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={configuracao.exigir_2fa_admins}\n              onChange={(e) => handleFieldChange('exigir_2fa_admins', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">\n              Exigir 2FA obrigatório para administradores\n            </span>\n          </label>\n        </div>\n\n        <div className=\"mt-4\">\n          <h5 className=\"text-sm font-medium text-gray-700 mb-3\">Métodos 2FA Permitidos</h5>\n          <div className=\"space-y-2\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.metodos_2fa_permitidos.includes('totp')}\n                onChange={(e) => {\n                  const metodos = [...configuracao.metodos_2fa_permitidos];\n                  if (e.target.checked) {\n                    metodos.push('totp');\n                  } else {\n                    const index = metodos.indexOf('totp');\n                    if (index > -1) metodos.splice(index, 1);\n                  }\n                  handleFieldChange('metodos_2fa_permitidos', metodos);\n                }}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Aplicativo Autenticador (TOTP)</span>\n            </label>\n            \n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.metodos_2fa_permitidos.includes('sms')}\n                onChange={(e) => {\n                  const metodos = [...configuracao.metodos_2fa_permitidos];\n                  if (e.target.checked) {\n                    metodos.push('sms');\n                  } else {\n                    const index = metodos.indexOf('sms');\n                    if (index > -1) metodos.splice(index, 1);\n                  }\n                  handleFieldChange('metodos_2fa_permitidos', metodos);\n                }}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">SMS</span>\n            </label>\n            \n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={configuracao.metodos_2fa_permitidos.includes('email')}\n                onChange={(e) => {\n                  const metodos = [...configuracao.metodos_2fa_permitidos];\n                  if (e.target.checked) {\n                    metodos.push('email');\n                  } else {\n                    const index = metodos.indexOf('email');\n                    if (index > -1) metodos.splice(index, 1);\n                  }\n                  handleFieldChange('metodos_2fa_permitidos', metodos);\n                }}\n                className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Email</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Auditoria e Logs */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Eye className=\"w-4 h-4 mr-2\" />\n          Auditoria e Logs\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Retenção de Logs (dias)\n            </label>\n            <input\n              type=\"number\"\n              min=\"30\"\n              max=\"365\"\n              value={configuracao.retencao_logs_dias}\n              onChange={(e) => handleFieldChange('retencao_logs_dias', parseInt(e.target.value))}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-4 space-y-3\">\n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={configuracao.log_todas_acoes}\n              onChange={(e) => handleFieldChange('log_todas_acoes', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">\n              Registrar todas as ações dos usuários\n            </span>\n          </label>\n          \n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={configuracao.alertar_tentativas_suspeitas}\n              onChange={(e) => handleFieldChange('alertar_tentativas_suspeitas', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">\n              Alertar sobre tentativas de acesso suspeitas\n            </span>\n          </label>\n          \n          <label className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={configuracao.bloquear_ips_suspeitos}\n              onChange={(e) => handleFieldChange('bloquear_ips_suspeitos', e.target.checked)}\n              className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">\n              Bloquear automaticamente IPs suspeitos\n            </span>\n          </label>\n        </div>\n      </div>\n\n      {/* Modal de Confirmação */}\n      <ConfirmacaoSenha\n        isOpen={showConfirmacao}\n        onConfirm={handleConfirmSave}\n        onCancel={() => setShowConfirmacao(false)}\n        isLoading={isValidating || isSaving}\n      />\n    </div>\n  );\n}