import React, { useState } from 'react';\nimport { Save, Building, Globe, Calendar, DollarSign } from 'lucide-react';\nimport { useConfiguracaoCategoria } from '../../hooks/useConfiguracaoHierarquica';\nimport { CategoriaConfiguracaoHierarquica } from '../../types/configuracoes';\n\nconst ESTADOS_BRASIL = [\n  { value: 'AC', label: 'Acre' },\n  { value: 'AL', label: 'Alagoas' },\n  { value: 'AP', label: 'Amapá' },\n  { value: 'AM', label: 'Amazonas' },\n  { value: 'BA', label: 'Bahia' },\n  { value: 'CE', label: 'Ceará' },\n  { value: 'DF', label: 'Distrito Federal' },\n  { value: 'ES', label: 'Espírito Santo' },\n  { value: 'GO', label: 'Goiás' },\n  { value: 'MA', label: 'Maranhão' },\n  { value: 'MT', label: 'Mato Grosso' },\n  { value: 'MS', label: 'Mato Grosso do Sul' },\n  { value: 'MG', label: 'Minas Gerais' },\n  { value: 'PA', label: 'Pará' },\n  { value: 'PB', label: 'Paraíba' },\n  { value: 'PR', label: 'Paraná' },\n  { value: 'PE', label: 'Pernambuco' },\n  { value: 'PI', label: 'Piauí' },\n  { value: 'RJ', label: 'Rio de Janeiro' },\n  { value: 'RN', label: 'Rio Grande do Norte' },\n  { value: 'RS', label: 'Rio Grande do Sul' },\n  { value: 'RO', label: 'Rondônia' },\n  { value: 'RR', label: 'Roraima' },\n  { value: 'SC', label: 'Santa Catarina' },\n  { value: 'SP', label: 'São Paulo' },\n  { value: 'SE', label: 'Sergipe' },\n  { value: 'TO', label: 'Tocantins' }\n];\n\nconst TIMEZONES = [\n  { value: 'America/Sao_Paulo', label: 'Brasília (UTC-3)' },\n  { value: 'America/Manaus', label: 'Manaus (UTC-4)' },\n  { value: 'America/Rio_Branco', label: 'Rio Branco (UTC-5)' },\n  { value: 'America/Noronha', label: 'Fernando de Noronha (UTC-2)' }\n];\n\nconst FORMATOS_DATA = [\n  { value: 'DD/MM/YYYY', label: 'DD/MM/AAAA (31/12/2023)' },\n  { value: 'MM/DD/YYYY', label: 'MM/DD/AAAA (12/31/2023)' },\n  { value: 'YYYY-MM-DD', label: 'AAAA-MM-DD (2023-12-31)' },\n  { value: 'DD-MM-YYYY', label: 'DD-MM-AAAA (31-12-2023)' }\n];\n\nconst MOEDAS = [\n  { value: 'BRL', label: 'Real Brasileiro (R$)' },\n  { value: 'USD', label: 'Dólar Americano ($)' },\n  { value: 'EUR', label: 'Euro (€)' }\n];\n\nexport function ConfiguracaoGeral() {\n  const {\n    configuracao,\n    isLoading,\n    isSaving,\n    error,\n    successMessage,\n    temAcesso,\n    controleAcesso,\n    atualizarCampo,\n    salvar\n  } = useConfiguracaoCategoria(CategoriaConfiguracaoHierarquica.GERAL);\n\n  const [alteracoesPendentes, setAlteracoesPendentes] = useState(false);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!temAcesso) {\n    return (\n      <div className=\"text-center p-8\">\n        <div className=\"text-red-500 mb-4\">\n          <Building className=\"w-12 h-12 mx-auto\" />\n        </div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n          Acesso Negado\n        </h3>\n        <p className=\"text-gray-600\">\n          Você não tem permissão para acessar as configurações gerais.\n        </p>\n      </div>\n    );\n  }\n\n  const handleFieldChange = async (campo: string, valor: any) => {\n    if (campo.includes('.')) {\n      // Campo aninhado (ex: endereco.cidade)\n      const [parent, child] = campo.split('.');\n      const parentValue = configuracao[parent as keyof typeof configuracao] as any;\n      \n      await atualizarCampo(parent as any, {\n        ...parentValue,\n        [child]: valor\n      });\n    } else {\n      await atualizarCampo(campo as any, valor);\n    }\n    \n    setAlteracoesPendentes(true);\n  };\n\n  const handleSave = async () => {\n    const success = await salvar();\n    if (success) {\n      setAlteracoesPendentes(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-gray-900 flex items-center\">\n            <Building className=\"w-5 h-5 mr-2\" />\n            {controleAcesso.descricao}\n          </h3>\n          {controleAcesso.alertaImpacto && (\n            <p className=\"text-sm text-amber-600 mt-1\">\n              {controleAcesso.alertaImpacto}\n            </p>\n          )}\n        </div>\n        \n        <button\n          onClick={handleSave}\n          disabled={isSaving || !alteracoesPendentes}\n          className={`\n            inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm\n            ${alteracoesPendentes\n              ? 'text-white bg-blue-600 hover:bg-blue-700 focus:ring-blue-500'\n              : 'text-gray-400 bg-gray-200 cursor-not-allowed'\n            }\n            focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50\n          `}\n        >\n          {isSaving ? (\n            <>\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n              Salvando...\n            </>\n          ) : (\n            <>\n              <Save className=\"w-4 h-4 mr-2\" />\n              Salvar Alterações\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Messages */}\n      {error && (\n        <div className=\"rounded-md bg-red-50 p-4\">\n          <div className=\"text-sm text-red-700\">{error}</div>\n        </div>\n      )}\n      \n      {successMessage && (\n        <div className=\"rounded-md bg-green-50 p-4\">\n          <div className=\"text-sm text-green-700\">{successMessage}</div>\n        </div>\n      )}\n\n      {/* Dados da Empresa */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Building className=\"w-4 h-4 mr-2\" />\n          Dados da Empresa\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Nome da Empresa */}\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Nome da Empresa *\n            </label>\n            <input\n              type=\"text\"\n              value={configuracao.nome_empresa}\n              onChange={(e) => handleFieldChange('nome_empresa', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Digite o nome da empresa\"\n              required\n            />\n          </div>\n\n          {/* CNPJ */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              CNPJ\n            </label>\n            <input\n              type=\"text\"\n              value={configuracao.cnpj}\n              onChange={(e) => handleFieldChange('cnpj', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"00.000.000/0000-00\"\n            />\n          </div>\n\n          {/* Email */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Email Administrativo *\n            </label>\n            <input\n              type=\"email\"\n              value={configuracao.email_admin}\n              onChange={(e) => handleFieldChange('email_admin', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"contato@empresa.com\"\n              required\n            />\n          </div>\n\n          {/* Telefone */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Telefone *\n            </label>\n            <input\n              type=\"tel\"\n              value={configuracao.telefone}\n              onChange={(e) => handleFieldChange('telefone', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"(11) 99999-9999\"\n              required\n            />\n          </div>\n\n          {/* Endereço */}\n          <div className=\"md:col-span-2\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Endereço\n            </label>\n            <input\n              type=\"text\"\n              value={configuracao.endereco.logradouro}\n              onChange={(e) => handleFieldChange('endereco.logradouro', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Rua, número, bairro\"\n            />\n          </div>\n\n          {/* Cidade */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Cidade\n            </label>\n            <input\n              type=\"text\"\n              value={configuracao.endereco.cidade}\n              onChange={(e) => handleFieldChange('endereco.cidade', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Nome da cidade\"\n            />\n          </div>\n\n          {/* Estado */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Estado\n            </label>\n            <select\n              value={configuracao.endereco.estado}\n              onChange={(e) => handleFieldChange('endereco.estado', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"\">Selecione o estado</option>\n              {ESTADOS_BRASIL.map(estado => (\n                <option key={estado.value} value={estado.value}>\n                  {estado.label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* CEP */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              CEP\n            </label>\n            <input\n              type=\"text\"\n              value={configuracao.endereco.cep}\n              onChange={(e) => handleFieldChange('endereco.cep', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"00000-000\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Configurações de Interface */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Globe className=\"w-4 h-4 mr-2\" />\n          Configurações de Interface\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Tema Padrão */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Tema Padrão\n            </label>\n            <select\n              value={configuracao.tema_padrao}\n              onChange={(e) => handleFieldChange('tema_padrao', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"claro\">Claro</option>\n              <option value=\"escuro\">Escuro</option>\n              <option value=\"auto\">Automático</option>\n            </select>\n          </div>\n\n          {/* Idioma */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Idioma\n            </label>\n            <select\n              value={configuracao.idioma}\n              onChange={(e) => handleFieldChange('idioma', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"pt-BR\">Português (Brasil)</option>\n              <option value=\"en-US\">English (US)</option>\n              <option value=\"es-ES\">Español</option>\n            </select>\n          </div>\n\n          {/* Timezone */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Fuso Horário\n            </label>\n            <select\n              value={configuracao.timezone}\n              onChange={(e) => handleFieldChange('timezone', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              {TIMEZONES.map(tz => (\n                <option key={tz.value} value={tz.value}>\n                  {tz.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Configurações de Formato */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n        <h4 className=\"text-md font-medium text-gray-900 mb-4 flex items-center\">\n          <Calendar className=\"w-4 h-4 mr-2\" />\n          Formatos e Moeda\n        </h4>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Formato de Data */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Formato de Data\n            </label>\n            <select\n              value={configuracao.formato_data}\n              onChange={(e) => handleFieldChange('formato_data', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              {FORMATOS_DATA.map(formato => (\n                <option key={formato.value} value={formato.value}>\n                  {formato.label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Moeda Padrão */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Moeda Padrão\n            </label>\n            <select\n              value={configuracao.moeda_padrao}\n              onChange={(e) => handleFieldChange('moeda_padrao', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              {MOEDAS.map(moeda => (\n                <option key={moeda.value} value={moeda.value}>\n                  {moeda.label}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Formato de Moeda */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Formato de Moeda\n            </label>\n            <input\n              type=\"text\"\n              value={configuracao.formato_moeda}\n              onChange={(e) => handleFieldChange('formato_moeda', e.target.value)}\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"R$ 0,00\"\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Use 0 para dígitos, vírgula para decimal\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}