import{s as n}from"./index-CoYpbbJr.js";class f{static async registrarEmpresa(r){try{const a=this.validarDadosRegistro(r);if(!a.valido)return{success:!1,error:a.erro};if(await this.verificarCNPJExistente(r.cnpj))return{success:!1,error:"CNPJ já cadastrado no sistema"};const{data:s,error:o}=await n.auth.signUp({email:r.email_admin,password:r.senha,options:{data:{name:r.nome_admin,full_name:r.nome_admin,role:"admin"}}});if(o||!s.user)return console.error("Erro ao criar usuário no auth:",o),{success:!1,error:(o==null?void 0:o.message)||"Erro ao criar usuário"};const t=await this.criarEmpresa(r,s.user.id);return!t.success||!t.empresa?{success:!1,error:t.error}:t}catch(a){return console.error("Erro no registro da empresa:",a),{success:!1,error:"Erro interno do servidor"}}}static validarDadosRegistro(r){var a,e,s,o;return(a=r.nome_empresa)!=null&&a.trim()?(e=r.cnpj)!=null&&e.trim()?this.validarCNPJ(r.cnpj)?(s=r.nome_admin)!=null&&s.trim()?(o=r.email_admin)!=null&&o.trim()?this.validarEmail(r.email_admin)?!r.senha||r.senha.length<8?{valido:!1,erro:"Senha deve ter pelo menos 8 caracteres"}:r.senha!==r.confirmar_senha?{valido:!1,erro:"Senhas não coincidem"}:{valido:!0}:{valido:!1,erro:"Email inválido"}:{valido:!1,erro:"Email é obrigatório"}:{valido:!1,erro:"Nome do administrador é obrigatório"}:{valido:!1,erro:"CNPJ inválido"}:{valido:!1,erro:"CNPJ é obrigatório"}:{valido:!1,erro:"Nome da empresa é obrigatório"}}static validarCNPJ(r){const a=r.replace(/[^\d]/g,"");if(a.length!==14||/^(\d)\1{13}$/.test(a))return!1;let e=0,s=2;for(let i=11;i>=0;i--)e+=parseInt(a[i])*s,s=s===9?2:s+1;const o=e%11,t=o<2?0:11-o;if(parseInt(a[12])!==t)return!1;e=0,s=2;for(let i=12;i>=0;i--)e+=parseInt(a[i])*s,s=s===9?2:s+1;const c=e%11,l=c<2?0:11-c;return parseInt(a[13])===l}static validarEmail(r){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r)}static async verificarCNPJExistente(r){try{const{data:a,error:e}=await n.from("empresas").select("id").eq("cnpj",r).single();return e&&e.code!=="PGRST116"?(console.error("Erro ao verificar CNPJ:",e),!1):!!a}catch(a){return console.error("Erro ao verificar CNPJ:",a),!1}}static async criarEmpresa(r,a){try{const{data:e,error:s}=await n.rpc("registrar_empresa_completa",{p_nome_empresa:r.nome_empresa,p_cnpj:r.cnpj,p_email_admin:r.email_admin,p_telefone_empresa:r.telefone_empresa||null,p_endereco:r.endereco||null,p_nome_admin:r.nome_admin,p_telefone_admin:r.telefone_admin||null,p_user_id:a});if(s)return console.error("Erro ao chamar função de registro:",s),{success:!1,error:s.message};if(!e||!e.success){const i=(e==null?void 0:e.error)||"Erro desconhecido ao registrar empresa";return console.error("Erro retornado pela função:",i),{success:!1,error:i}}const{data:o,error:t}=await n.from("empresas").select("*").eq("id",e.empresa_id).single();if(t)return console.error("Erro ao buscar empresa criada:",t),{success:!1,error:"Empresa criada mas erro ao buscar dados"};const{data:c,error:l}=await n.from("usuarios_empresa").select("*").eq("id",e.usuario_id).single();return l?(console.error("Erro ao buscar usuário criado:",l),{success:!1,error:"Usuário criado mas erro ao buscar dados"}):(sessionStorage.setItem("show_onboarding","true"),sessionStorage.setItem("onboarding_user_name",r.nome_admin),sessionStorage.setItem("onboarding_company_name",r.nome_empresa),{success:!0,empresa:o,usuario:c})}catch(e){return console.error("Erro ao criar empresa:",e),{success:!1,error:"Erro interno do servidor"}}}}export{f as RegistroEmpresaService};
